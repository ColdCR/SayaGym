// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SayaGym.Data;

#nullable disable

namespace SayaGym.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240513043240_WilAdds")]
    partial class WilAdds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SayaGym.Models.AreasATrabajarUsuario", b =>
                {
                    b.Property<string>("AreaATrabajar")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("AreaATrabajar", "IdUsuario");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("AreasATrabajarUsuario");
                });

            modelBuilder.Entity("SayaGym.Models.Ejercicio", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEjercicio"));

                    b.Property<string>("AreaATrabajar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEjercicio");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("SayaGym.Models.EjercicioRutina", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .HasColumnType("int");

                    b.Property<int>("IdRutina")
                        .HasColumnType("int");

                    b.Property<int>("EjercicioIdEjercicio")
                        .HasColumnType("int");

                    b.Property<int>("RutinaIdRutina")
                        .HasColumnType("int");

                    b.HasKey("IdEjercicio", "IdRutina");

                    b.HasIndex("EjercicioIdEjercicio");

                    b.HasIndex("RutinaIdRutina");

                    b.ToTable("EjerciciosRutina");
                });

            modelBuilder.Entity("SayaGym.Models.Enfermedad", b =>
                {
                    b.Property<int>("IdEnfermedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnfermedad"));

                    b.Property<string>("NombreEnfermedad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEnfermedad");

                    b.ToTable("Enfermedades");
                });

            modelBuilder.Entity("SayaGym.Models.EnfermedadProhibidaEjercicio", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .HasColumnType("int");

                    b.Property<int>("IdEnfermedad")
                        .HasColumnType("int");

                    b.Property<int>("EjercicioIdEjercicio")
                        .HasColumnType("int");

                    b.Property<int>("EnfermedadIdEnfermedad")
                        .HasColumnType("int");

                    b.HasKey("IdEjercicio", "IdEnfermedad");

                    b.HasIndex("EjercicioIdEjercicio");

                    b.HasIndex("EnfermedadIdEnfermedad");

                    b.ToTable("EnfermedadesProhibidasEjercicios");
                });

            modelBuilder.Entity("SayaGym.Models.EnfermedadUsuario", b =>
                {
                    b.Property<int>("IdEnfermedad")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("EjercicioIdEjercicio")
                        .HasColumnType("int");

                    b.Property<int?>("EnfermedadIdEnfermedad")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdEnfermedad", "IdUsuario");

                    b.HasIndex("EjercicioIdEjercicio");

                    b.HasIndex("EnfermedadIdEnfermedad");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("EnfermedadesUsuario");
                });

            modelBuilder.Entity("SayaGym.Models.Rutina", b =>
                {
                    b.Property<int>("IdRutina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRutina"));

                    b.Property<int>("DiaRutina")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRutina")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRutina");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Rutina");
                });

            modelBuilder.Entity("SayaGym.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Estatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Objetivo")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Contraseña = "admin",
                            Correo = "admin@gmail.com",
                            Dirección = "",
                            Edad = 20,
                            Estado = "A",
                            Estatura = 170m,
                            Nombre = "Admin",
                            Objetivo = 0,
                            Peso = 80m,
                            Rol = 0,
                            Sexo = "M",
                            Teléfono = "00000000"
                        });
                });

            modelBuilder.Entity("SayaGym.Models.AreasATrabajarUsuario", b =>
                {
                    b.HasOne("SayaGym.Models.Usuario", "Usuario")
                        .WithMany("AreasATrabajar")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SayaGym.Models.EjercicioRutina", b =>
                {
                    b.HasOne("SayaGym.Models.Ejercicio", "Ejercicio")
                        .WithMany("Ejercicios")
                        .HasForeignKey("EjercicioIdEjercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SayaGym.Models.Rutina", "Rutina")
                        .WithMany("EjerciciosRutina")
                        .HasForeignKey("RutinaIdRutina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejercicio");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("SayaGym.Models.EnfermedadProhibidaEjercicio", b =>
                {
                    b.HasOne("SayaGym.Models.Ejercicio", "Ejercicio")
                        .WithMany()
                        .HasForeignKey("EjercicioIdEjercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SayaGym.Models.Enfermedad", "Enfermedad")
                        .WithMany("EnfermedadesProhibidasEjercicios")
                        .HasForeignKey("EnfermedadIdEnfermedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejercicio");

                    b.Navigation("Enfermedad");
                });

            modelBuilder.Entity("SayaGym.Models.EnfermedadUsuario", b =>
                {
                    b.HasOne("SayaGym.Models.Ejercicio", null)
                        .WithMany("EnfermedadesUsuario")
                        .HasForeignKey("EjercicioIdEjercicio");

                    b.HasOne("SayaGym.Models.Enfermedad", null)
                        .WithMany("EnfermedadesUsuarios")
                        .HasForeignKey("EnfermedadIdEnfermedad");

                    b.HasOne("SayaGym.Models.Usuario", "Usuario")
                        .WithMany("EnfermedadesUsuario")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SayaGym.Models.Rutina", b =>
                {
                    b.HasOne("SayaGym.Models.Usuario", "Usuario")
                        .WithOne("Rutina")
                        .HasForeignKey("SayaGym.Models.Rutina", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SayaGym.Models.Ejercicio", b =>
                {
                    b.Navigation("Ejercicios");

                    b.Navigation("EnfermedadesUsuario");
                });

            modelBuilder.Entity("SayaGym.Models.Enfermedad", b =>
                {
                    b.Navigation("EnfermedadesProhibidasEjercicios");

                    b.Navigation("EnfermedadesUsuarios");
                });

            modelBuilder.Entity("SayaGym.Models.Rutina", b =>
                {
                    b.Navigation("EjerciciosRutina");
                });

            modelBuilder.Entity("SayaGym.Models.Usuario", b =>
                {
                    b.Navigation("AreasATrabajar");

                    b.Navigation("EnfermedadesUsuario");

                    b.Navigation("Rutina")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
